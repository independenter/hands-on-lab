server:
  port: 8999

blog:
  store:
    path: /Users/dobb/Workspace/java/learned/blog/src/main/resources/upload/
    rel: /upload/
  docs: /Users/dobb/Workspace/java/learned/blog/src/main/resources/static/docs/

#全局自定义变量
#java -cp ./druid-1.1.21.jar com.alibaba.druid.filter.config.ConfigTools 123456
druid:
  public:
    key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnpHlCKXdRkLCY3ka7BqKoicOBrZYuUl3iA0FhLWvlXmsL2q5oGcJn8q0c/SqvZaECdXZeByMEPjfzCdo3fdBUCAwEAAQ==
  passwd: B8yUI8uqUG2VNl91zrLwUhhjt3U59EPbKSIwo46hwIKYT3DYX727U7b5FBeRkw+ayft55pEeZe2pSf3P9bq4MQ==

spring:
  application:
    name: dobb-blog
  servlet:
    multipart:
      max-file-size: 10MB
      file-size-threshold: 3
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false
  datasource:
    druid:
      name: active
      url: jdbc:mysql://localhost:3306/blog?useUnicode=true&useSSL=false&characterEncoding=utf-8
      username: root
      driver-class-name: com.mysql.cj.jdbc.Driver
      max-active: 30 # 最大并发连接数
      initial-size: 1 # 初始连接数
      max-wait: 6000 #配置获取连接等待超时的时间
      min-idle: 10 #最小空闲连接数
      time-between-eviction-runs-millis: 60000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000  #配置一个连接在池中最小生存的时间，单位是毫秒-
      validation-query: select 1
      validation-query-timeout: 100
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      max-open-prepared-statements: 20
      remove-abandoned: true #打开 removeAbandoned 功能
      remove-abandoned-timeout: 1800
      log-abandoned: true #关闭 abanded 连接时输出错误日志
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties:
        config.decrypt: true
        config.decrypt.key: ${druid.public.key}
      password: ${druid.passwd}
      default-auto-commit: true
      filter:
        stat:
          enabled: true
          slow-sql-millis: 5000
          merge-sql: true
        config:
          enabled: true
        wall:
          enabled: true

logging:
  level:
    org.springframework: warn
    org.apache: warn
    com.alibaba: warn
    springfox.documentation: error
    com.netflix: off
    io.swagger: error
    io.lettuce: error
    cn.com.dbappsecurity: debug

#mybatis配置
mybatis:
  mapper-locations: classpath:mapperxml/*Mapper.xml  #注意：一定要对应mapper映射xml文件的所在路径
  configuration:
    #全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。
    lazy-loading-enabled: false
    #使全局的映射器启用或禁用缓存
    cache-enabled: true
    #当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。
    aggressive-lazy-loading: false
    #是否允许单条sql 返回多个数据集  (取决于驱动的兼容性) default:true
    multiple-result-sets-enabled: true
    #是否可以使用列的别名 (取决于驱动的兼容性) default:true
    use-column-label: true
    #允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。  default:false
    use-generated-keys: false
    #指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部
    auto-mapping-behavior: partial
    #这是默认的执行类型  （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新）
    default-executor-type: simple
    #使用驼峰命名法转换字段。
    map-underscore-to-camel-case: true
    #设置本地缓存范围 session:就会有数据的共享  statement:语句范围 (这样就不会有数据的共享 ) defalut:session
    local-cache-scope: session
    #设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER，插入空值时不需要指定类型
    jdbc-type-for-null: 'null'